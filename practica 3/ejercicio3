program project1;
type
  producto = record
    codigo : integer;
    nombre : string [50];
    descripcion :string [50];
    stock : integer;
  end;

  archivoProductos = file of producto;

procedure volcarDatos(var f:archivoProductos; var t : text);
var
   aux: producto;
begin
    reset(f);
    reset(t);

     while ( not eof(t)) do
     begin
          readln(t,aux.codigo);
          readln(t,aux.nombre);
          readln(t,aux.descripcion);
          readln(t,aux.stock);
          write(f,aux);
     end;
      close(f);
      close(t);
end;
procedure bajaLogica(var f:archivoProductos);
var
   aux:producto;
   num: integer;
begin
     readln(num);
     while(num <> -1 ) do
     begin
          reset(f);
          aux.codigo:=-999;
          while((not eof(f)) and (num <> aux.codigo)) do
          begin
               read(f,aux);
          end;

          if(num = aux.codigo) then
          begin
              aux.codigo:= -1;
              seek(f,filepos(f) -1 );
              write(f,aux);
          end;
          readln(num);

     end;
     close(f);
end;
procedure altaFisica (var f:archivoProductos);
var
   num : integer;
   aux: producto;
begin

     readln(num);

     while (num <> -1 ) do
     begin
           reset(f);
           aux.codigo:=-999;
           while((not eof(f)) and (aux.codigo <> -1)) do
           begin
                read(f,aux);
           end;
           if(aux.codigo = -1 ) then
           begin
               seek(f,filePos(f) -1 );
           end;
           aux.codigo:=num;
           write(f,aux);
           readln(num);
     end;

     close(f);

end;

procedure imprimirArchivo(var f : archivoProductos);
var
   aux: producto;
begin
     reset(f);

     while(not eof(f)) do
     begin
          read(f,aux);
          write(aux.codigo);
          write ('   ');
          write(aux.nombre);
          write ('   ');
          write(aux.descripcion);
          write ('   ');
          write(aux.stock);
          writeln ('   ');

     end;
     close(f);
end;

procedure bajaListaInvertida (var f: archivoProductos);
var
   aux: producto;
   pos: integer;
   num: integer;

begin
     readln(num);

     while(num <> -1) do
     begin
          reset(f);
          if(not eof(f)) then
          begin
              read(f,aux);
              pos:= aux.codigo;
          end;
          while(( not eof(f)) and ((aux.codigo <> num))) do read(f,aux);
          if(aux.codigo = num) then
          begin
               seek(f,filePos(f) -1 );
               aux.codigo:=pos;
               write(f,aux);
               aux.codigo:= (filePos(f) -1)*-1;
               seek(f,0);
               write(f,aux);
          end;
          readln(num);
     end;


end;

procedure altaListaInvertida (var f:archivoProductos; nuevo: producto);
var
   aux : producto;
   pos : integer;
begin
     reset(f);
     if (not eof(f)) then
     begin
          read(f,aux);
          if( aux.codigo = 0 ) then
          begin
               seek(f,fileSize(f));
               write(f,nuevo);
          end
          else
          begin
               seek(f,aux.codigo*-1);
               read(f,aux);
               seek(f,filePos(f) - 1);
               write(f,nuevo);
               seek(f,0);
               write(f,aux);
          end;
     end;
     close(f);
end;

var
  f1: archivoProductos;
  t1 : text;
  num: integer;
  aux : producto;

begin

     assign(f1,'productos');
     rewrite(f1);


     assign(t1,'productosTexto.txt');
     reset(t1);

     close(f1);
     close(t1);

     volcarDatos(f1,t1);
     imprimirArchivo(f1);


     bajaListaInvertida(f1);
     imprimirArchivo(f1);


     readln(num);
     while(  num <> -1 ) do
     begin
           aux.codigo:=num ;
           altaListaInvertida(f1,aux);
           imprimirArchivo(f1);
           readln(num);
     end;


     readln();

end.                             
